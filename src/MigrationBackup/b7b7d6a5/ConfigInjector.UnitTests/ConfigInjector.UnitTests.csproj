<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\NUnit3TestAdapter.3.10.0\build\net35\NUnit3TestAdapter.props" Condition="Exists('..\packages\NUnit3TestAdapter.3.10.0\build\net35\NUnit3TestAdapter.props')" />
  <Import Project="..\packages\NUnit.3.10.1\build\NUnit.props" Condition="Exists('..\packages\NUnit.3.10.1\build\NUnit.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{3343E4BD-01F2-4A04-9B5D-B3A2F973A803}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ConfigInjector.UnitTests</RootNamespace>
    <AssemblyName>ConfigInjector.UnitTests</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="nunit.framework, Version=3.10.1.0, Culture=neutral, PublicKeyToken=2638cd05610744eb, processorArchitecture=MSIL">
      <HintPath>..\packages\NUnit.3.10.1\lib\net45\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="Shouldly, Version=3.0.0.0, Culture=neutral, PublicKeyToken=6042cbcb05cbc941, processorArchitecture=MSIL">
      <HintPath>..\packages\Shouldly.3.0.0\lib\net40\Shouldly.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="TestFor.cs" />
    <Compile Include="Stubs\StubTypeProvider.cs" />
    <Compile Include="Stubs\StubSettingsOverrider.cs" />
    <Compile Include="Stubs\StubSettingsReader.cs" />
    <Compile Include="Tests\AppSettingsReaderTests\WhenSpecifyingKeysToIgnoreViaARuleset.cs" />
    <Compile Include="MemoryLogger.cs" />
    <Compile Include="Tests\InstrumentationTests\WhenLoggingAnOverridenSetting.cs" />
    <Compile Include="Tests\InstrumentationTests\WhenLoggingASetting.cs" />
    <Compile Include="Tests\ObjectSettingsReaderTests\WhenReadingNestedSettingsFromAnObjectSettingsReader.cs" />
    <Compile Include="Tests\ObjectSettingsReaderTests\WhenReadingSettingsUsingAnObjectSettingsReader.cs" />
    <Compile Include="Tests\OverriddenSettingsTests\WhenOverridingASettingViaAnEnvironmentVariable.cs" />
    <Compile Include="Tests\OverriddenSettingsTests\WhenThereAreSettingsThatAreOverridden.cs" />
    <Compile Include="Tests\ValueConversionTests\WhenConvertingConfigurationSettingValues.cs" />
    <Compile Include="Tests\ValueConversionTests\WhenParsingASettingThatHasAnInvalidValue.cs" />
    <Compile Include="Tests\MissingSettingsTests\WhenReadingTheValueForASettingThatDoesNotExist.cs" />
    <Compile Include="Tests\ExtraneousSettingsTests\WhenThereAreSettingsThatExistInWebConfigButAreNotAccountedFor.cs" />
    <Compile Include="Tests\AmbiguousMatchTests\WhenThereAreSettingsThatHaveAmbiguousMatchesInWebConfig.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="App.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\ConfigInjector\ConfigInjector.csproj">
      <Project>{9C2819AE-BA24-4A8B-9091-BDD3D53AC3E0}</Project>
      <Name>ConfigInjector</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\NUnit.3.10.1\build\NUnit.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\NUnit.3.10.1\build\NUnit.props'))" />
    <Error Condition="!Exists('..\packages\NUnit3TestAdapter.3.10.0\build\net35\NUnit3TestAdapter.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\NUnit3TestAdapter.3.10.0\build\net35\NUnit3TestAdapter.props'))" />
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>